import React, { Component } from "react";
import { Form, Row, Col, Button, Select, message } from "antd";
import { formIsNvl, getSearchForm } from "../../utils/G";
import AddCostModel from "./AddCostModel"
import moment from "moment";
import "moment/locale/zh-cn"

moment.locale("zh-cn");

const { Option } = Select;


class HomeSearchForm extends Component {

    state = {
        expand: false,
        loading: true,
    };

    handleSearch = e => {
        e.preventDefault();
        this.props.form.validateFields((err, values) => {
            if (formIsNvl(values)) {
                message.warning("请输入需要查询的值");
                return;
            }
            const json = getSearchForm(values, {
                S_MIXED_DATE: "YYYY-MM-DD"
            });
            this.props.search(json);
        });

    };


    handleAddClicked = (e) =>{
        this.child.showModel();
    };


    getVendorsSelectedOptions(){
        const children = this.props.vendors.map(it => {
            return (
                <Option value={it.id} key={it.id}>{it.text}</Option>
            );
        });
        return children;
    }


    getSelectedOptions() {
        const children = this.props.monthsArray.map(it => {
            return (
                <Option value={it.id} key={it.id}>{it.text}</Option>
            );
        });
        return children;
    }

    onRef = (ref) => {
        this.child = ref
    };


    render() {
        const { getFieldDecorator } = this.props.form;
        const {monthsArray} = this.props;
        const currentMonth = monthsArray[1]?monthsArray[0].text:"";

        return (
            <Form className="ant-advanced-search-form home-search-form">
                <Row gutter={24} style={{padding: '5px 0px'}}>
                    <Col span={6} key={'s_1'}>
                        <Form.Item label={"门店"} key={'provider'}>
                            {getFieldDecorator(`S_PROV_SID`, {
                                rules:[
                                    {
                                        required: false,
                                        message: 'Input something!'
                                    }
                                ]
                            })(<Select style={{ width: 160 }} key={'s_v'} allowClear={true} size="small">{this.getVendorsSelectedOptions()}</Select>)}
                        </Form.Item>
                    </Col>
                    <Col span={4} key={'s_2'}>
                        <Form.Item label={"调色时间"} key={'p_s'}>
                            {getFieldDecorator(`S_MIXED_DATE`, {
                                initialValue: currentMonth,
                                rules:[
                                    {
                                        required: false,
                                        message: 'Input something!'
                                    }
                                ]
                            })(<Select style={{ width: 120 }} key={'s_c'} allowClear={true} size="small">{this.getSelectedOptions()}</Select>)}
                        </Form.Item>
                    </Col>

                    <Col span={4}  key={'s_4'} style={{ marginTop: 5 }}>
                        <Button type="primary" onClick={this.handleSearch} size="small">
                            查询
                        </Button>
                    </Col>
                    <Col span={3}  key={'s_5'} style={{ marginTop: 5 }}>
                        <AddCostModel monthsArray={this.props.monthsArray} vendors={this.props.vendors} onRef={this.onRef}/>
                        <Button onClick={this.handleAddClicked} type={"primary"}>新增</Button>
                    </Col>
                </Row>
            </Form>
        );
    }
}
export default Form.create({name: "advanced_search"})(HomeSearchForm);
